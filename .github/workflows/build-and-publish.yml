name: "Deploy FivemToolsLib"

on:
  push:
    tags:
      - "fivemtoolslib/v*"

permissions:
  contents: write

env:
  CLIENT_PROJECT_PATH: .\FivemToolsLib.Client\FivemToolsLib.Client.csproj
  SERVER_PROJECT_PATH: .\FivemToolsLib.Server\FivemToolsLib.Server.csproj


jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Restore NuGet packages
        run: nuget restore FivemToolsLib.sln

      - name: Build with MSBuild
        run: msbuild FivemToolsLib.sln /p:Configuration=Release
      
      - name: Pack client NuGet package
        run: dotnet pack $env:CLIENT_PROJECT_PATH -c Release -p:Version=$(cat VERSION) --no-build --output .\FivemToolsLib.Client\nupkg

      - name: Pack server NuGet package
        run: dotnet pack $env:SERVER_PROJECT_PATH -c Release -p:Version=$(cat VERSION) --no-build --output .\FivemToolsLib.Server\nupkg

      - name: Push client NuGet package with version
        run: |
          $packageName = "FivemToolsLib.Client.$($(Get-Content -Path "VERSION" -Raw).Trim()).nupkg"
          
          dotnet nuget push .\FivemToolsLib.Client\nupkg\$packageName --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"
        shell: pwsh
        
      - name: Push server NuGet package with version
        run: |
          $packageName = "FivemToolsLib.Server.$($(Get-Content -Path "VERSION" -Raw).Trim()).nupkg"

          dotnet nuget push .\FivemToolsLib.Server\nupkg\$packageName --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"
        shell: pwsh


      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      
      - uses: csexton/release-asset-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            FivemToolsLib.Client\bin\Release\net452\FivemToolsLib.Client.dll
            FivemToolsLib.Client\bin\Release\net452\FivemToolsLib.Client.xml
            FivemToolsLib.Server\bin\Release\net452\FivemToolsLib.Server.dll
            FivemToolsLib.Server\bin\Release\net452\FivemToolsLib.Server.xml
          pattern: |
            FivemToolsLib.Client\nupkg\*.nupkg
            FivemToolsLib.Server\nupkg\*.nupkg
          release-url: ${{ steps.create_release.outputs.upload_url }}